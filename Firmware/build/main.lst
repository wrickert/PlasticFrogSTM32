ARM GAS  /tmp/ccMAvbaB.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB39:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccMAvbaB.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** #define CLICK_REPORT_SIZE 8
  39:Src/main.c    **** uint8_t click_report[CLICK_REPORT_SIZE] = {0};
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** extern USBD_HandleTypeDef hUsbDeviceFS;
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   * @retval int
  70:Src/main.c    ****   */
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE END 1 */
  76:Src/main.c    ****   
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
  88:Src/main.c    ****   SystemClock_Config();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccMAvbaB.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   MX_USB_DEVICE_Init();
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Infinite loop */
 102:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 103:Src/main.c    ****   while (1)
 104:Src/main.c    ****   {
 105:Src/main.c    ****     /* USER CODE END WHILE */
 106:Src/main.c    **** click_report[2] = 0x65; // send button press
 107:Src/main.c    **** USBD_HID_SendReport(&hUsbDeviceFS, click_report, CLICK_REPORT_SIZE);
 108:Src/main.c    **** HAL_Delay(50);
 109:Src/main.c    **** 
 110:Src/main.c    **** click_report[2] = 0; // send button release
 111:Src/main.c    **** USBD_HID_SendReport(&hUsbDeviceFS, click_report, CLICK_REPORT_SIZE);
 112:Src/main.c    **** 
 113:Src/main.c    **** HAL_Delay(200);
 114:Src/main.c    **** 
 115:Src/main.c    ****     /* USER CODE BEGIN 3 */
 116:Src/main.c    ****   }
 117:Src/main.c    ****   /* USER CODE END 3 */
 118:Src/main.c    **** }
 119:Src/main.c    **** 
 120:Src/main.c    **** /**
 121:Src/main.c    ****   * @brief System Clock Configuration
 122:Src/main.c    ****   * @retval None
 123:Src/main.c    ****   */
 124:Src/main.c    **** void SystemClock_Config(void)
 125:Src/main.c    **** {
 126:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 127:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 129:Src/main.c    **** 
 130:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 131:Src/main.c    ****   */
 132:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48;
 133:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 135:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136:Src/main.c    ****   {
 137:Src/main.c    ****     Error_Handler();
 138:Src/main.c    ****   }
 139:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 140:Src/main.c    ****   */
 141:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 143:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 144:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 146:Src/main.c    **** 
 147:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
ARM GAS  /tmp/ccMAvbaB.s 			page 4


 148:Src/main.c    ****   {
 149:Src/main.c    ****     Error_Handler();
 150:Src/main.c    ****   }
 151:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 152:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 153:Src/main.c    **** 
 154:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     Error_Handler();
 157:Src/main.c    ****   }
 158:Src/main.c    **** }
 159:Src/main.c    **** 
 160:Src/main.c    **** /**
 161:Src/main.c    ****   * @brief GPIO Initialization Function
 162:Src/main.c    ****   * @param None
 163:Src/main.c    ****   * @retval None
 164:Src/main.c    ****   */
 165:Src/main.c    **** static void MX_GPIO_Init(void)
 166:Src/main.c    **** {
  26              		.loc 1 166 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 167:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 167 3 view .LVU1
  40              		.loc 1 167 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* GPIO Ports Clock Enable */
 170:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 170 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 170 3 view .LVU4
  49              		.loc 1 170 3 view .LVU5
  50 000e 184B     		ldr	r3, .L2
  51 0010 5969     		ldr	r1, [r3, #20]
  52 0012 8020     		movs	r0, #128
  53 0014 C002     		lsls	r0, r0, #11
  54 0016 0143     		orrs	r1, r0
  55 0018 5961     		str	r1, [r3, #20]
  56              		.loc 1 170 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0240     		ands	r2, r0
  59 001e 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccMAvbaB.s 			page 5


  60              		.loc 1 170 3 view .LVU7
  61 0020 019A     		ldr	r2, [sp, #4]
  62              	.LBE2:
 171:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 171 3 view .LVU8
  64              	.LBB3:
  65              		.loc 1 171 3 view .LVU9
  66              		.loc 1 171 3 view .LVU10
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 171 3 view .LVU11
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 171 3 view .LVU12
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE3:
 172:Src/main.c    **** 
 173:Src/main.c    ****   /*Configure GPIO pin Output Level */
 174:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET);
  79              		.loc 1 174 3 view .LVU13
  80 0034 8024     		movs	r4, #128
  81 0036 6400     		lsls	r4, r4, #1
  82 0038 0E4D     		ldr	r5, .L2+4
  83 003a 0022     		movs	r2, #0
  84 003c 2100     		movs	r1, r4
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  87              	.LVL1:
 175:Src/main.c    **** 
 176:Src/main.c    ****   /*Configure GPIO pin : PB8 */
 177:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
  88              		.loc 1 177 3 view .LVU14
  89              		.loc 1 177 23 is_stmt 0 view .LVU15
  90 0044 0394     		str	r4, [sp, #12]
 178:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 178 3 is_stmt 1 view .LVU16
  92              		.loc 1 178 24 is_stmt 0 view .LVU17
  93 0046 0123     		movs	r3, #1
  94 0048 0493     		str	r3, [sp, #16]
 179:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 179 3 is_stmt 1 view .LVU18
  96              		.loc 1 179 24 is_stmt 0 view .LVU19
  97 004a 0024     		movs	r4, #0
  98 004c 0594     		str	r4, [sp, #20]
 180:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 180 3 is_stmt 1 view .LVU20
 100              		.loc 1 180 25 is_stmt 0 view .LVU21
 101 004e 0694     		str	r4, [sp, #24]
 181:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 181 3 is_stmt 1 view .LVU22
 103 0050 03A9     		add	r1, sp, #12
 104 0052 2800     		movs	r0, r5
 105 0054 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccMAvbaB.s 			page 6


 106              	.LVL2:
 182:Src/main.c    **** 
 183:Src/main.c    ****   /*Configure GPIO pins : PA1 PA2 */
 184:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
 107              		.loc 1 184 3 view .LVU23
 108              		.loc 1 184 23 is_stmt 0 view .LVU24
 109 0058 0623     		movs	r3, #6
 110 005a 0393     		str	r3, [sp, #12]
 185:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 111              		.loc 1 185 3 is_stmt 1 view .LVU25
 112              		.loc 1 185 24 is_stmt 0 view .LVU26
 113 005c 0494     		str	r4, [sp, #16]
 186:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 186 3 is_stmt 1 view .LVU27
 115              		.loc 1 186 24 is_stmt 0 view .LVU28
 116 005e 0594     		str	r4, [sp, #20]
 187:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 117              		.loc 1 187 3 is_stmt 1 view .LVU29
 118 0060 9020     		movs	r0, #144
 119 0062 03A9     		add	r1, sp, #12
 120 0064 C005     		lsls	r0, r0, #23
 121 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 122              	.LVL3:
 188:Src/main.c    **** 
 189:Src/main.c    **** }
 123              		.loc 1 189 1 is_stmt 0 view .LVU30
 124 006a 09B0     		add	sp, sp, #36
 125              		@ sp needed
 126 006c 30BD     		pop	{r4, r5, pc}
 127              	.L3:
 128 006e C046     		.align	2
 129              	.L2:
 130 0070 00100240 		.word	1073876992
 131 0074 00040048 		.word	1207960576
 132              		.cfi_endproc
 133              	.LFE39:
 135              		.section	.text.SystemClock_Config,"ax",%progbits
 136              		.align	1
 137              		.global	SystemClock_Config
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	SystemClock_Config:
 144              	.LFB38:
 125:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145              		.loc 1 125 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 96
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 10B5     		push	{r4, lr}
 150              	.LCFI2:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 4, -8
 153              		.cfi_offset 14, -4
 154 0002 98B0     		sub	sp, sp, #96
 155              	.LCFI3:
ARM GAS  /tmp/ccMAvbaB.s 			page 7


 156              		.cfi_def_cfa_offset 104
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 157              		.loc 1 126 3 view .LVU32
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158              		.loc 1 126 22 is_stmt 0 view .LVU33
 159 0004 3022     		movs	r2, #48
 160 0006 0021     		movs	r1, #0
 161 0008 0CA8     		add	r0, sp, #48
 162 000a FFF7FEFF 		bl	memset
 163              	.LVL4:
 127:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 164              		.loc 1 127 3 is_stmt 1 view .LVU34
 127:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 165              		.loc 1 127 22 is_stmt 0 view .LVU35
 166 000e 1022     		movs	r2, #16
 167 0010 0021     		movs	r1, #0
 168 0012 07A8     		add	r0, sp, #28
 169 0014 FFF7FEFF 		bl	memset
 170              	.LVL5:
 128:Src/main.c    **** 
 171              		.loc 1 128 3 is_stmt 1 view .LVU36
 128:Src/main.c    **** 
 172              		.loc 1 128 28 is_stmt 0 view .LVU37
 173 0018 1822     		movs	r2, #24
 174 001a 0021     		movs	r1, #0
 175 001c 01A8     		add	r0, sp, #4
 176 001e FFF7FEFF 		bl	memset
 177              	.LVL6:
 132:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 178              		.loc 1 132 3 is_stmt 1 view .LVU38
 132:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 179              		.loc 1 132 36 is_stmt 0 view .LVU39
 180 0022 2023     		movs	r3, #32
 181 0024 0B93     		str	r3, [sp, #44]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 182              		.loc 1 133 3 is_stmt 1 view .LVU40
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 183              		.loc 1 133 32 is_stmt 0 view .LVU41
 184 0026 1F3B     		subs	r3, r3, #31
 185 0028 1393     		str	r3, [sp, #76]
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 186              		.loc 1 134 3 is_stmt 1 view .LVU42
 135:Src/main.c    ****   {
 187              		.loc 1 135 3 view .LVU43
 135:Src/main.c    ****   {
 188              		.loc 1 135 7 is_stmt 0 view .LVU44
 189 002a 0BA8     		add	r0, sp, #44
 190 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 191              	.LVL7:
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 192              		.loc 1 141 3 is_stmt 1 view .LVU45
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 193              		.loc 1 141 31 is_stmt 0 view .LVU46
 194 0030 0723     		movs	r3, #7
 195 0032 0793     		str	r3, [sp, #28]
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 196              		.loc 1 143 3 is_stmt 1 view .LVU47
ARM GAS  /tmp/ccMAvbaB.s 			page 8


 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197              		.loc 1 143 34 is_stmt 0 view .LVU48
 198 0034 043B     		subs	r3, r3, #4
 199 0036 0893     		str	r3, [sp, #32]
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 200              		.loc 1 144 3 is_stmt 1 view .LVU49
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 201              		.loc 1 144 35 is_stmt 0 view .LVU50
 202 0038 0024     		movs	r4, #0
 203 003a 0994     		str	r4, [sp, #36]
 145:Src/main.c    **** 
 204              		.loc 1 145 3 is_stmt 1 view .LVU51
 145:Src/main.c    **** 
 205              		.loc 1 145 36 is_stmt 0 view .LVU52
 206 003c 0A94     		str	r4, [sp, #40]
 147:Src/main.c    ****   {
 207              		.loc 1 147 3 is_stmt 1 view .LVU53
 147:Src/main.c    ****   {
 208              		.loc 1 147 7 is_stmt 0 view .LVU54
 209 003e 0121     		movs	r1, #1
 210 0040 07A8     		add	r0, sp, #28
 211 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 212              	.LVL8:
 151:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 213              		.loc 1 151 3 is_stmt 1 view .LVU55
 151:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 214              		.loc 1 151 38 is_stmt 0 view .LVU56
 215 0046 8023     		movs	r3, #128
 216 0048 9B02     		lsls	r3, r3, #10
 217 004a 0193     		str	r3, [sp, #4]
 152:Src/main.c    **** 
 218              		.loc 1 152 3 is_stmt 1 view .LVU57
 152:Src/main.c    **** 
 219              		.loc 1 152 35 is_stmt 0 view .LVU58
 220 004c 0694     		str	r4, [sp, #24]
 154:Src/main.c    ****   {
 221              		.loc 1 154 3 is_stmt 1 view .LVU59
 154:Src/main.c    ****   {
 222              		.loc 1 154 7 is_stmt 0 view .LVU60
 223 004e 01A8     		add	r0, sp, #4
 224 0050 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 225              	.LVL9:
 158:Src/main.c    **** 
 226              		.loc 1 158 1 view .LVU61
 227 0054 18B0     		add	sp, sp, #96
 228              		@ sp needed
 229 0056 10BD     		pop	{r4, pc}
 230              		.cfi_endproc
 231              	.LFE38:
 233              		.section	.text.main,"ax",%progbits
 234              		.align	1
 235              		.global	main
 236              		.syntax unified
 237              		.code	16
 238              		.thumb_func
 239              		.fpu softvfp
 241              	main:
ARM GAS  /tmp/ccMAvbaB.s 			page 9


 242              	.LFB37:
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
 243              		.loc 1 72 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 70B5     		push	{r4, r5, r6, lr}
 249              	.LCFI4:
 250              		.cfi_def_cfa_offset 16
 251              		.cfi_offset 4, -16
 252              		.cfi_offset 5, -12
 253              		.cfi_offset 6, -8
 254              		.cfi_offset 14, -4
  81:Src/main.c    **** 
 255              		.loc 1 81 3 view .LVU63
 256 0002 FFF7FEFF 		bl	HAL_Init
 257              	.LVL10:
  88:Src/main.c    **** 
 258              		.loc 1 88 3 view .LVU64
 259 0006 FFF7FEFF 		bl	SystemClock_Config
 260              	.LVL11:
  95:Src/main.c    ****   MX_USB_DEVICE_Init();
 261              		.loc 1 95 3 view .LVU65
 262 000a FFF7FEFF 		bl	MX_GPIO_Init
 263              	.LVL12:
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
 264              		.loc 1 96 3 view .LVU66
 265 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 266              	.LVL13:
 267              	.L6:
 103:Src/main.c    ****   {
 268              		.loc 1 103 3 discriminator 1 view .LVU67
 269              	.LBB4:
 106:Src/main.c    **** USBD_HID_SendReport(&hUsbDeviceFS, click_report, CLICK_REPORT_SIZE);
 270              		.loc 1 106 1 discriminator 1 view .LVU68
 106:Src/main.c    **** USBD_HID_SendReport(&hUsbDeviceFS, click_report, CLICK_REPORT_SIZE);
 271              		.loc 1 106 17 is_stmt 0 discriminator 1 view .LVU69
 272 0012 0B4C     		ldr	r4, .L7
 273 0014 6523     		movs	r3, #101
 274 0016 A370     		strb	r3, [r4, #2]
 107:Src/main.c    **** HAL_Delay(50);
 275              		.loc 1 107 1 is_stmt 1 discriminator 1 view .LVU70
 276 0018 0A4D     		ldr	r5, .L7+4
 277 001a 0822     		movs	r2, #8
 278 001c 2100     		movs	r1, r4
 279 001e 2800     		movs	r0, r5
 280 0020 FFF7FEFF 		bl	USBD_HID_SendReport
 281              	.LVL14:
 108:Src/main.c    **** 
 282              		.loc 1 108 1 discriminator 1 view .LVU71
 283 0024 3220     		movs	r0, #50
 284 0026 FFF7FEFF 		bl	HAL_Delay
 285              	.LVL15:
 110:Src/main.c    **** USBD_HID_SendReport(&hUsbDeviceFS, click_report, CLICK_REPORT_SIZE);
 286              		.loc 1 110 1 discriminator 1 view .LVU72
 110:Src/main.c    **** USBD_HID_SendReport(&hUsbDeviceFS, click_report, CLICK_REPORT_SIZE);
ARM GAS  /tmp/ccMAvbaB.s 			page 10


 287              		.loc 1 110 17 is_stmt 0 discriminator 1 view .LVU73
 288 002a 0023     		movs	r3, #0
 289 002c A370     		strb	r3, [r4, #2]
 111:Src/main.c    **** 
 290              		.loc 1 111 1 is_stmt 1 discriminator 1 view .LVU74
 291 002e 0822     		movs	r2, #8
 292 0030 2100     		movs	r1, r4
 293 0032 2800     		movs	r0, r5
 294 0034 FFF7FEFF 		bl	USBD_HID_SendReport
 295              	.LVL16:
 113:Src/main.c    **** 
 296              		.loc 1 113 1 discriminator 1 view .LVU75
 297 0038 C820     		movs	r0, #200
 298 003a FFF7FEFF 		bl	HAL_Delay
 299              	.LVL17:
 300 003e E8E7     		b	.L6
 301              	.L8:
 302              		.align	2
 303              	.L7:
 304 0040 00000000 		.word	.LANCHOR0
 305 0044 00000000 		.word	hUsbDeviceFS
 306              	.LBE4:
 307              		.cfi_endproc
 308              	.LFE37:
 310              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 311              		.align	1
 312              		.global	HAL_TIM_PeriodElapsedCallback
 313              		.syntax unified
 314              		.code	16
 315              		.thumb_func
 316              		.fpu softvfp
 318              	HAL_TIM_PeriodElapsedCallback:
 319              	.LVL18:
 320              	.LFB40:
 190:Src/main.c    **** 
 191:Src/main.c    **** /* USER CODE BEGIN 4 */
 192:Src/main.c    **** 
 193:Src/main.c    **** /* USER CODE END 4 */
 194:Src/main.c    **** 
 195:Src/main.c    **** /**
 196:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 197:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 198:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 199:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 200:Src/main.c    ****   * @param  htim : TIM handle
 201:Src/main.c    ****   * @retval None
 202:Src/main.c    ****   */
 203:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 204:Src/main.c    **** {
 321              		.loc 1 204 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		.loc 1 204 1 is_stmt 0 view .LVU77
 326 0000 10B5     		push	{r4, lr}
 327              	.LCFI5:
 328              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccMAvbaB.s 			page 11


 329              		.cfi_offset 4, -8
 330              		.cfi_offset 14, -4
 205:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* USER CODE END Callback 0 */
 208:Src/main.c    ****   if (htim->Instance == TIM1) {
 331              		.loc 1 208 3 is_stmt 1 view .LVU78
 332              		.loc 1 208 11 is_stmt 0 view .LVU79
 333 0002 0268     		ldr	r2, [r0]
 334              		.loc 1 208 6 view .LVU80
 335 0004 034B     		ldr	r3, .L12
 336 0006 9A42     		cmp	r2, r3
 337 0008 00D0     		beq	.L11
 338              	.LVL19:
 339              	.L9:
 209:Src/main.c    ****     HAL_IncTick();
 210:Src/main.c    ****   }
 211:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 212:Src/main.c    **** 
 213:Src/main.c    ****   /* USER CODE END Callback 1 */
 214:Src/main.c    **** }
 340              		.loc 1 214 1 view .LVU81
 341              		@ sp needed
 342 000a 10BD     		pop	{r4, pc}
 343              	.LVL20:
 344              	.L11:
 209:Src/main.c    ****     HAL_IncTick();
 345              		.loc 1 209 5 is_stmt 1 view .LVU82
 346 000c FFF7FEFF 		bl	HAL_IncTick
 347              	.LVL21:
 348              		.loc 1 214 1 is_stmt 0 view .LVU83
 349 0010 FBE7     		b	.L9
 350              	.L13:
 351 0012 C046     		.align	2
 352              	.L12:
 353 0014 002C0140 		.word	1073818624
 354              		.cfi_endproc
 355              	.LFE40:
 357              		.section	.text.Error_Handler,"ax",%progbits
 358              		.align	1
 359              		.global	Error_Handler
 360              		.syntax unified
 361              		.code	16
 362              		.thumb_func
 363              		.fpu softvfp
 365              	Error_Handler:
 366              	.LFB41:
 215:Src/main.c    **** 
 216:Src/main.c    **** /**
 217:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 218:Src/main.c    ****   * @retval None
 219:Src/main.c    ****   */
 220:Src/main.c    **** void Error_Handler(void)
 221:Src/main.c    **** {
 367              		.loc 1 221 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccMAvbaB.s 			page 12


 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 222:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 223:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 226:Src/main.c    **** }
 372              		.loc 1 226 1 view .LVU85
 373              		@ sp needed
 374 0000 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE41:
 378              		.global	click_report
 379              		.section	.bss.click_report,"aw",%nobits
 380              		.align	2
 381              		.set	.LANCHOR0,. + 0
 384              	click_report:
 385 0000 00000000 		.space	8
 385      00000000 
 386              		.text
 387              	.Letext0:
 388              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 389              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 390              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 391              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 392              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 393              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 394              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
 395              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 396              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 397              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 398              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 399              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 400              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 401              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 402              		.file 16 "/usr/arm-none-eabi/include/stdlib.h"
 403              		.file 17 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 404              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 405              		.file 19 "Inc/usb_device.h"
 406              		.file 20 "<built-in>"
ARM GAS  /tmp/ccMAvbaB.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccMAvbaB.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccMAvbaB.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccMAvbaB.s:130    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/ccMAvbaB.s:136    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccMAvbaB.s:143    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccMAvbaB.s:234    .text.main:0000000000000000 $t
     /tmp/ccMAvbaB.s:241    .text.main:0000000000000000 main
     /tmp/ccMAvbaB.s:304    .text.main:0000000000000040 $d
     /tmp/ccMAvbaB.s:311    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccMAvbaB.s:318    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccMAvbaB.s:353    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccMAvbaB.s:358    .text.Error_Handler:0000000000000000 $t
     /tmp/ccMAvbaB.s:365    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccMAvbaB.s:384    .bss.click_report:0000000000000000 click_report
     /tmp/ccMAvbaB.s:380    .bss.click_report:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
USBD_HID_SendReport
HAL_Delay
hUsbDeviceFS
HAL_IncTick
