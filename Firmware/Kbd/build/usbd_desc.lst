ARM GAS  /tmp/ccAubM7r.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_desc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  16              		.align	1
  17              		.global	USBD_FS_DeviceDescriptor
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	USBD_FS_DeviceDescriptor:
  25              	.LVL0:
  26              	.LFB37:
  27              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccAubM7r.s 			page 2


  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "Plastic Frog"
  69:Src/usbd_desc.c **** #define USBD_PID_FS     22315
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Human interface"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "HID Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "HID Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /**
  79:Src/usbd_desc.c ****   * @}
  80:Src/usbd_desc.c ****   */
  81:Src/usbd_desc.c **** 
  82:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE END 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  87:Src/usbd_desc.c ****   * @brief Private macros.
  88:Src/usbd_desc.c ****   * @{
ARM GAS  /tmp/ccAubM7r.s 			page 3


  89:Src/usbd_desc.c ****   */
  90:Src/usbd_desc.c **** 
  91:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /**
  96:Src/usbd_desc.c ****   * @}
  97:Src/usbd_desc.c ****   */
  98:Src/usbd_desc.c ****   
  99:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 100:Src/usbd_desc.c ****   * @brief Private functions declaration.
 101:Src/usbd_desc.c ****   * @{
 102:Src/usbd_desc.c ****   */
 103:Src/usbd_desc.c ****   
 104:Src/usbd_desc.c **** static void Get_SerialNum(void);
 105:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 106:Src/usbd_desc.c ****   
 107:Src/usbd_desc.c **** /**
 108:Src/usbd_desc.c ****   * @}
 109:Src/usbd_desc.c ****   */  
 110:Src/usbd_desc.c ****   
 111:Src/usbd_desc.c **** 
 112:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 113:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 114:Src/usbd_desc.c ****   * @{
 115:Src/usbd_desc.c ****   */
 116:Src/usbd_desc.c **** 
 117:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 118:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** 
 125:Src/usbd_desc.c **** #ifdef USBD_SUPPORT_USER_STRING_DESC
 126:Src/usbd_desc.c **** uint8_t * USBD_FS_USRStringDesc(USBD_SpeedTypeDef speed, uint8_t idx, uint16_t *length);
 127:Src/usbd_desc.c **** #endif /* USBD_SUPPORT_USER_STRING_DESC */
 128:Src/usbd_desc.c **** 
 129:Src/usbd_desc.c **** /**
 130:Src/usbd_desc.c ****   * @}
 131:Src/usbd_desc.c ****   */
 132:Src/usbd_desc.c **** 
 133:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 134:Src/usbd_desc.c ****   * @brief Private variables.
 135:Src/usbd_desc.c ****   * @{
 136:Src/usbd_desc.c ****   */
 137:Src/usbd_desc.c **** 
 138:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 139:Src/usbd_desc.c **** {
 140:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 141:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 142:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 143:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 144:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 145:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
ARM GAS  /tmp/ccAubM7r.s 			page 4


 146:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 147:Src/usbd_desc.c **** };
 148:Src/usbd_desc.c **** 
 149:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 150:Src/usbd_desc.c ****   #pragma data_alignment=4
 151:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 152:Src/usbd_desc.c **** /** USB standard device descriptor. */
 153:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 154:Src/usbd_desc.c **** {
 155:Src/usbd_desc.c ****   0x12,                       /*bLength */
 156:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 157:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 158:Src/usbd_desc.c ****   0x02,
 159:Src/usbd_desc.c ****   0x00,                       /*bDeviceClass*/
 160:Src/usbd_desc.c ****   0x00,                       /*bDeviceSubClass*/
 161:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 162:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 163:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 164:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 165:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 166:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 167:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 168:Src/usbd_desc.c ****   0x02,
 169:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 170:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 171:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 172:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 173:Src/usbd_desc.c **** };
 174:Src/usbd_desc.c **** 
 175:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 176:Src/usbd_desc.c **** 
 177:Src/usbd_desc.c **** /**
 178:Src/usbd_desc.c ****   * @}
 179:Src/usbd_desc.c ****   */
 180:Src/usbd_desc.c **** 
 181:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 182:Src/usbd_desc.c ****   * @brief Private variables.
 183:Src/usbd_desc.c ****   * @{
 184:Src/usbd_desc.c ****   */
 185:Src/usbd_desc.c **** 
 186:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 187:Src/usbd_desc.c ****   #pragma data_alignment=4
 188:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 189:Src/usbd_desc.c **** 
 190:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 191:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 192:Src/usbd_desc.c **** {
 193:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 194:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 195:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 196:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 197:Src/usbd_desc.c **** };
 198:Src/usbd_desc.c **** 
 199:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 200:Src/usbd_desc.c ****   #pragma data_alignment=4
 201:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 202:Src/usbd_desc.c **** /* Internal string descriptor. */
ARM GAS  /tmp/ccAubM7r.s 			page 5


 203:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 204:Src/usbd_desc.c **** 
 205:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 206:Src/usbd_desc.c ****   #pragma data_alignment=4   
 207:Src/usbd_desc.c **** #endif
 208:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 209:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 210:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 211:Src/usbd_desc.c **** };
 212:Src/usbd_desc.c **** 
 213:Src/usbd_desc.c **** /**
 214:Src/usbd_desc.c ****   * @}
 215:Src/usbd_desc.c ****   */
 216:Src/usbd_desc.c **** 
 217:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 218:Src/usbd_desc.c ****   * @brief Private functions.
 219:Src/usbd_desc.c ****   * @{
 220:Src/usbd_desc.c ****   */
 221:Src/usbd_desc.c **** 
 222:Src/usbd_desc.c **** /**
 223:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 224:Src/usbd_desc.c ****   * @param  speed : Current device speed
 225:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 226:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 227:Src/usbd_desc.c ****   */
 228:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 229:Src/usbd_desc.c **** {
  28              		.loc 1 229 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 230:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  33              		.loc 1 230 3 view .LVU1
  34              		.loc 1 230 11 is_stmt 0 view .LVU2
  35 0000 1223     		movs	r3, #18
  36 0002 0B80     		strh	r3, [r1]
 231:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  37              		.loc 1 231 3 is_stmt 1 view .LVU3
 232:Src/usbd_desc.c **** }
  38              		.loc 1 232 1 is_stmt 0 view .LVU4
  39 0004 0048     		ldr	r0, .L2
  40              	.LVL1:
  41              		.loc 1 232 1 view .LVU5
  42              		@ sp needed
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0008 00000000 		.word	.LANCHOR0
  48              		.cfi_endproc
  49              	.LFE37:
  51              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  52              		.align	1
  53              		.global	USBD_FS_LangIDStrDescriptor
  54              		.syntax unified
  55              		.code	16
ARM GAS  /tmp/ccAubM7r.s 			page 6


  56              		.thumb_func
  57              		.fpu softvfp
  59              	USBD_FS_LangIDStrDescriptor:
  60              	.LVL2:
  61              	.LFB38:
 233:Src/usbd_desc.c **** 
 234:Src/usbd_desc.c **** /**
 235:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 236:Src/usbd_desc.c ****   * @param  speed : Current device speed
 237:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 238:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 239:Src/usbd_desc.c ****   */
 240:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 241:Src/usbd_desc.c **** {
  62              		.loc 1 241 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 242:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  67              		.loc 1 242 3 view .LVU7
  68              		.loc 1 242 11 is_stmt 0 view .LVU8
  69 0000 0423     		movs	r3, #4
  70 0002 0B80     		strh	r3, [r1]
 243:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  71              		.loc 1 243 3 is_stmt 1 view .LVU9
 244:Src/usbd_desc.c **** }
  72              		.loc 1 244 1 is_stmt 0 view .LVU10
  73 0004 0048     		ldr	r0, .L5
  74              	.LVL3:
  75              		.loc 1 244 1 view .LVU11
  76              		@ sp needed
  77 0006 7047     		bx	lr
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 0008 00000000 		.word	.LANCHOR1
  82              		.cfi_endproc
  83              	.LFE38:
  85              		.section	.text.IntToUnicode,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	IntToUnicode:
  93              	.LVL4:
  94              	.LFB45:
 245:Src/usbd_desc.c **** 
 246:Src/usbd_desc.c **** /**
 247:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 248:Src/usbd_desc.c ****   * @param  speed : Current device speed
 249:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 250:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 251:Src/usbd_desc.c ****   */
 252:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 253:Src/usbd_desc.c **** {
ARM GAS  /tmp/ccAubM7r.s 			page 7


 254:Src/usbd_desc.c ****   if(speed == 0)
 255:Src/usbd_desc.c ****   {
 256:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 257:Src/usbd_desc.c ****   }
 258:Src/usbd_desc.c ****   else
 259:Src/usbd_desc.c ****   {
 260:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 261:Src/usbd_desc.c ****   }
 262:Src/usbd_desc.c ****   return USBD_StrDesc;
 263:Src/usbd_desc.c **** }
 264:Src/usbd_desc.c **** 
 265:Src/usbd_desc.c **** /**
 266:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 267:Src/usbd_desc.c ****   * @param  speed : Current device speed
 268:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 269:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 270:Src/usbd_desc.c ****   */
 271:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 272:Src/usbd_desc.c **** {
 273:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 274:Src/usbd_desc.c ****   return USBD_StrDesc;
 275:Src/usbd_desc.c **** }
 276:Src/usbd_desc.c **** 
 277:Src/usbd_desc.c **** /**
 278:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 279:Src/usbd_desc.c ****   * @param  speed : Current device speed
 280:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 281:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 282:Src/usbd_desc.c ****   */
 283:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 284:Src/usbd_desc.c **** {
 285:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 286:Src/usbd_desc.c **** 
 287:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 288:Src/usbd_desc.c ****    * ID */
 289:Src/usbd_desc.c ****   Get_SerialNum();
 290:Src/usbd_desc.c **** 
 291:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 292:Src/usbd_desc.c **** }
 293:Src/usbd_desc.c **** 
 294:Src/usbd_desc.c **** /**
 295:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 296:Src/usbd_desc.c ****   * @param  speed : Current device speed
 297:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 298:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 299:Src/usbd_desc.c ****   */
 300:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 301:Src/usbd_desc.c **** {
 302:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 303:Src/usbd_desc.c ****   {
 304:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 305:Src/usbd_desc.c ****   }
 306:Src/usbd_desc.c ****   else
 307:Src/usbd_desc.c ****   {
 308:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 309:Src/usbd_desc.c ****   }
 310:Src/usbd_desc.c ****   return USBD_StrDesc;
ARM GAS  /tmp/ccAubM7r.s 			page 8


 311:Src/usbd_desc.c **** }
 312:Src/usbd_desc.c **** 
 313:Src/usbd_desc.c **** /**
 314:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 315:Src/usbd_desc.c ****   * @param  speed : Current device speed
 316:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 317:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 318:Src/usbd_desc.c ****   */
 319:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 320:Src/usbd_desc.c **** {
 321:Src/usbd_desc.c ****   if(speed == 0)
 322:Src/usbd_desc.c ****   {
 323:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 324:Src/usbd_desc.c ****   }
 325:Src/usbd_desc.c ****   else
 326:Src/usbd_desc.c ****   {
 327:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 328:Src/usbd_desc.c ****   }
 329:Src/usbd_desc.c ****   return USBD_StrDesc;
 330:Src/usbd_desc.c **** }
 331:Src/usbd_desc.c **** 
 332:Src/usbd_desc.c **** /**
 333:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor 
 334:Src/usbd_desc.c ****   * @param  None 
 335:Src/usbd_desc.c ****   * @retval None
 336:Src/usbd_desc.c ****   */
 337:Src/usbd_desc.c **** static void Get_SerialNum(void)
 338:Src/usbd_desc.c **** {
 339:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 340:Src/usbd_desc.c **** 
 341:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 342:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 343:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 344:Src/usbd_desc.c **** 
 345:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 346:Src/usbd_desc.c **** 
 347:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 348:Src/usbd_desc.c ****   {
 349:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 350:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 351:Src/usbd_desc.c ****   }
 352:Src/usbd_desc.c **** }
 353:Src/usbd_desc.c **** 
 354:Src/usbd_desc.c **** /**
 355:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char 
 356:Src/usbd_desc.c ****   * @param  value: value to convert
 357:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer 
 358:Src/usbd_desc.c ****   * @param  len: buffer length
 359:Src/usbd_desc.c ****   * @retval None
 360:Src/usbd_desc.c ****   */
 361:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 362:Src/usbd_desc.c **** {
  95              		.loc 1 362 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		.loc 1 362 1 is_stmt 0 view .LVU13
ARM GAS  /tmp/ccAubM7r.s 			page 9


 100 0000 30B5     		push	{r4, r5, lr}
 101              	.LCFI0:
 102              		.cfi_def_cfa_offset 12
 103              		.cfi_offset 4, -12
 104              		.cfi_offset 5, -8
 105              		.cfi_offset 14, -4
 363:Src/usbd_desc.c ****   uint8_t idx = 0;
 106              		.loc 1 363 3 is_stmt 1 view .LVU14
 107              	.LVL5:
 364:Src/usbd_desc.c **** 
 365:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 108              		.loc 1 365 3 view .LVU15
 109              		.loc 1 365 12 is_stmt 0 view .LVU16
 110 0002 0023     		movs	r3, #0
 111              		.loc 1 365 3 view .LVU17
 112 0004 0AE0     		b	.L8
 113              	.LVL6:
 114              	.L9:
 366:Src/usbd_desc.c ****   {
 367:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 368:Src/usbd_desc.c ****     {
 369:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 370:Src/usbd_desc.c ****     }
 371:Src/usbd_desc.c ****     else
 372:Src/usbd_desc.c ****     {
 373:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 115              		.loc 1 373 7 is_stmt 1 view .LVU18
 116              		.loc 1 373 14 is_stmt 0 view .LVU19
 117 0006 5D00     		lsls	r5, r3, #1
 118              		.loc 1 373 43 view .LVU20
 119 0008 3734     		adds	r4, r4, #55
 120              		.loc 1 373 21 view .LVU21
 121 000a 4C55     		strb	r4, [r1, r5]
 122              	.L10:
 374:Src/usbd_desc.c ****     }
 375:Src/usbd_desc.c **** 
 376:Src/usbd_desc.c ****     value = value << 4;
 123              		.loc 1 376 5 is_stmt 1 discriminator 2 view .LVU22
 124              		.loc 1 376 11 is_stmt 0 discriminator 2 view .LVU23
 125 000c 0001     		lsls	r0, r0, #4
 126              	.LVL7:
 377:Src/usbd_desc.c **** 
 378:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 127              		.loc 1 378 5 is_stmt 1 discriminator 2 view .LVU24
 128              		.loc 1 378 12 is_stmt 0 discriminator 2 view .LVU25
 129 000e 5C00     		lsls	r4, r3, #1
 130              		.loc 1 378 9 discriminator 2 view .LVU26
 131 0010 0134     		adds	r4, r4, #1
 132 0012 0C19     		adds	r4, r1, r4
 133              		.loc 1 378 23 discriminator 2 view .LVU27
 134 0014 0025     		movs	r5, #0
 135 0016 2570     		strb	r5, [r4]
 365:Src/usbd_desc.c ****   {
 136              		.loc 1 365 31 discriminator 2 view .LVU28
 137 0018 0133     		adds	r3, r3, #1
 138              	.LVL8:
 365:Src/usbd_desc.c ****   {
ARM GAS  /tmp/ccAubM7r.s 			page 10


 139              		.loc 1 365 31 discriminator 2 view .LVU29
 140 001a DBB2     		uxtb	r3, r3
 141              	.LVL9:
 142              	.L8:
 365:Src/usbd_desc.c ****   {
 143              		.loc 1 365 3 discriminator 1 view .LVU30
 144 001c 9342     		cmp	r3, r2
 145 001e 06D2     		bcs	.L12
 367:Src/usbd_desc.c ****     {
 146              		.loc 1 367 5 is_stmt 1 view .LVU31
 367:Src/usbd_desc.c ****     {
 147              		.loc 1 367 17 is_stmt 0 view .LVU32
 148 0020 040F     		lsrs	r4, r0, #28
 367:Src/usbd_desc.c ****     {
 149              		.loc 1 367 8 view .LVU33
 150 0022 092C     		cmp	r4, #9
 151 0024 EFD8     		bhi	.L9
 369:Src/usbd_desc.c ****     }
 152              		.loc 1 369 7 is_stmt 1 view .LVU34
 369:Src/usbd_desc.c ****     }
 153              		.loc 1 369 14 is_stmt 0 view .LVU35
 154 0026 5D00     		lsls	r5, r3, #1
 369:Src/usbd_desc.c ****     }
 155              		.loc 1 369 37 view .LVU36
 156 0028 3034     		adds	r4, r4, #48
 369:Src/usbd_desc.c ****     }
 157              		.loc 1 369 21 view .LVU37
 158 002a 4C55     		strb	r4, [r1, r5]
 159 002c EEE7     		b	.L10
 160              	.L12:
 379:Src/usbd_desc.c ****   }
 380:Src/usbd_desc.c **** }
 161              		.loc 1 380 1 view .LVU38
 162              		@ sp needed
 163 002e 30BD     		pop	{r4, r5, pc}
 164              		.cfi_endproc
 165              	.LFE45:
 167              		.section	.text.Get_SerialNum,"ax",%progbits
 168              		.align	1
 169              		.syntax unified
 170              		.code	16
 171              		.thumb_func
 172              		.fpu softvfp
 174              	Get_SerialNum:
 175              	.LFB44:
 338:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 176              		.loc 1 338 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180 0000 70B5     		push	{r4, r5, r6, lr}
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 4, -16
 184              		.cfi_offset 5, -12
 185              		.cfi_offset 6, -8
 186              		.cfi_offset 14, -4
ARM GAS  /tmp/ccAubM7r.s 			page 11


 339:Src/usbd_desc.c **** 
 187              		.loc 1 339 3 view .LVU40
 341:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 188              		.loc 1 341 3 view .LVU41
 341:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 189              		.loc 1 341 17 is_stmt 0 view .LVU42
 190 0002 0B4B     		ldr	r3, .L16
 191 0004 1868     		ldr	r0, [r3]
 192              	.LVL10:
 342:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 193              		.loc 1 342 3 is_stmt 1 view .LVU43
 342:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 194              		.loc 1 342 17 is_stmt 0 view .LVU44
 195 0006 0B4B     		ldr	r3, .L16+4
 196 0008 1D68     		ldr	r5, [r3]
 197              	.LVL11:
 343:Src/usbd_desc.c **** 
 198              		.loc 1 343 3 is_stmt 1 view .LVU45
 343:Src/usbd_desc.c **** 
 199              		.loc 1 343 17 is_stmt 0 view .LVU46
 200 000a 0B4B     		ldr	r3, .L16+8
 201 000c 1B68     		ldr	r3, [r3]
 202              	.LVL12:
 345:Src/usbd_desc.c **** 
 203              		.loc 1 345 3 is_stmt 1 view .LVU47
 345:Src/usbd_desc.c **** 
 204              		.loc 1 345 17 is_stmt 0 view .LVU48
 205 000e C018     		adds	r0, r0, r3
 206              	.LVL13:
 347:Src/usbd_desc.c ****   {
 207              		.loc 1 347 3 is_stmt 1 view .LVU49
 347:Src/usbd_desc.c ****   {
 208              		.loc 1 347 6 is_stmt 0 view .LVU50
 209 0010 0028     		cmp	r0, #0
 210 0012 00D1     		bne	.L15
 211              	.LVL14:
 212              	.L13:
 352:Src/usbd_desc.c **** 
 213              		.loc 1 352 1 view .LVU51
 214              		@ sp needed
 215              	.LVL15:
 352:Src/usbd_desc.c **** 
 216              		.loc 1 352 1 view .LVU52
 217 0014 70BD     		pop	{r4, r5, r6, pc}
 218              	.LVL16:
 219              	.L15:
 349:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 220              		.loc 1 349 5 is_stmt 1 view .LVU53
 221 0016 094C     		ldr	r4, .L16+12
 222 0018 A11C     		adds	r1, r4, #2
 223 001a 0822     		movs	r2, #8
 224 001c FFF7FEFF 		bl	IntToUnicode
 225              	.LVL17:
 350:Src/usbd_desc.c ****   }
 226              		.loc 1 350 5 view .LVU54
 227 0020 2100     		movs	r1, r4
 228 0022 1231     		adds	r1, r1, #18
ARM GAS  /tmp/ccAubM7r.s 			page 12


 229 0024 0422     		movs	r2, #4
 230 0026 2800     		movs	r0, r5
 231 0028 FFF7FEFF 		bl	IntToUnicode
 232              	.LVL18:
 352:Src/usbd_desc.c **** 
 233              		.loc 1 352 1 is_stmt 0 view .LVU55
 234 002c F2E7     		b	.L13
 235              	.L17:
 236 002e C046     		.align	2
 237              	.L16:
 238 0030 ACF7FF1F 		.word	536868780
 239 0034 B0F7FF1F 		.word	536868784
 240 0038 B4F7FF1F 		.word	536868788
 241 003c 00000000 		.word	.LANCHOR2
 242              		.cfi_endproc
 243              	.LFE44:
 245              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 246              		.align	1
 247              		.global	USBD_FS_SerialStrDescriptor
 248              		.syntax unified
 249              		.code	16
 250              		.thumb_func
 251              		.fpu softvfp
 253              	USBD_FS_SerialStrDescriptor:
 254              	.LVL19:
 255              	.LFB41:
 284:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 256              		.loc 1 284 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 284:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 260              		.loc 1 284 1 is_stmt 0 view .LVU57
 261 0000 10B5     		push	{r4, lr}
 262              	.LCFI2:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 4, -8
 265              		.cfi_offset 14, -4
 285:Src/usbd_desc.c **** 
 266              		.loc 1 285 3 is_stmt 1 view .LVU58
 285:Src/usbd_desc.c **** 
 267              		.loc 1 285 11 is_stmt 0 view .LVU59
 268 0002 1A23     		movs	r3, #26
 269 0004 0B80     		strh	r3, [r1]
 289:Src/usbd_desc.c **** 
 270              		.loc 1 289 3 is_stmt 1 view .LVU60
 271 0006 FFF7FEFF 		bl	Get_SerialNum
 272              	.LVL20:
 291:Src/usbd_desc.c **** }
 273              		.loc 1 291 3 view .LVU61
 292:Src/usbd_desc.c **** 
 274              		.loc 1 292 1 is_stmt 0 view .LVU62
 275 000a 0148     		ldr	r0, .L19
 276              		@ sp needed
 277 000c 10BD     		pop	{r4, pc}
 278              	.L20:
 279 000e C046     		.align	2
ARM GAS  /tmp/ccAubM7r.s 			page 13


 280              	.L19:
 281 0010 00000000 		.word	.LANCHOR2
 282              		.cfi_endproc
 283              	.LFE41:
 285              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 286              		.align	2
 287              	.LC7:
 288 0000 53544D33 		.ascii	"STM32 Human interface\000"
 288      32204875 
 288      6D616E20 
 288      696E7465 
 288      72666163 
 289              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 290              		.align	1
 291              		.global	USBD_FS_ProductStrDescriptor
 292              		.syntax unified
 293              		.code	16
 294              		.thumb_func
 295              		.fpu softvfp
 297              	USBD_FS_ProductStrDescriptor:
 298              	.LVL21:
 299              	.LFB39:
 253:Src/usbd_desc.c ****   if(speed == 0)
 300              		.loc 1 253 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 253:Src/usbd_desc.c ****   if(speed == 0)
 304              		.loc 1 253 1 is_stmt 0 view .LVU64
 305 0000 10B5     		push	{r4, lr}
 306              	.LCFI3:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 4, -8
 309              		.cfi_offset 14, -4
 310 0002 0A00     		movs	r2, r1
 254:Src/usbd_desc.c ****   {
 311              		.loc 1 254 3 is_stmt 1 view .LVU65
 254:Src/usbd_desc.c ****   {
 312              		.loc 1 254 5 is_stmt 0 view .LVU66
 313 0004 0028     		cmp	r0, #0
 314 0006 05D1     		bne	.L22
 256:Src/usbd_desc.c ****   }
 315              		.loc 1 256 5 is_stmt 1 view .LVU67
 316 0008 0549     		ldr	r1, .L24
 317              	.LVL22:
 256:Src/usbd_desc.c ****   }
 318              		.loc 1 256 5 is_stmt 0 view .LVU68
 319 000a 0648     		ldr	r0, .L24+4
 320              	.LVL23:
 256:Src/usbd_desc.c ****   }
 321              		.loc 1 256 5 view .LVU69
 322 000c FFF7FEFF 		bl	USBD_GetString
 323              	.LVL24:
 324              	.L23:
 262:Src/usbd_desc.c **** }
 325              		.loc 1 262 3 is_stmt 1 view .LVU70
 263:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccAubM7r.s 			page 14


 326              		.loc 1 263 1 is_stmt 0 view .LVU71
 327 0010 0348     		ldr	r0, .L24
 328              		@ sp needed
 329 0012 10BD     		pop	{r4, pc}
 330              	.LVL25:
 331              	.L22:
 260:Src/usbd_desc.c ****   }
 332              		.loc 1 260 5 is_stmt 1 view .LVU72
 333 0014 0249     		ldr	r1, .L24
 334              	.LVL26:
 260:Src/usbd_desc.c ****   }
 335              		.loc 1 260 5 is_stmt 0 view .LVU73
 336 0016 0348     		ldr	r0, .L24+4
 337              	.LVL27:
 260:Src/usbd_desc.c ****   }
 338              		.loc 1 260 5 view .LVU74
 339 0018 FFF7FEFF 		bl	USBD_GetString
 340              	.LVL28:
 260:Src/usbd_desc.c ****   }
 341              		.loc 1 260 5 view .LVU75
 342 001c F8E7     		b	.L23
 343              	.L25:
 344 001e C046     		.align	2
 345              	.L24:
 346 0020 00000000 		.word	USBD_StrDesc
 347 0024 00000000 		.word	.LC7
 348              		.cfi_endproc
 349              	.LFE39:
 351              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 352              		.align	2
 353              	.LC10:
 354 0000 506C6173 		.ascii	"Plastic Frog\000"
 354      74696320 
 354      46726F67 
 354      00
 355              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 356              		.align	1
 357              		.global	USBD_FS_ManufacturerStrDescriptor
 358              		.syntax unified
 359              		.code	16
 360              		.thumb_func
 361              		.fpu softvfp
 363              	USBD_FS_ManufacturerStrDescriptor:
 364              	.LVL29:
 365              	.LFB40:
 272:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 366              		.loc 1 272 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 272:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 370              		.loc 1 272 1 is_stmt 0 view .LVU77
 371 0000 10B5     		push	{r4, lr}
 372              	.LCFI4:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 4, -8
 375              		.cfi_offset 14, -4
ARM GAS  /tmp/ccAubM7r.s 			page 15


 376 0002 0A00     		movs	r2, r1
 273:Src/usbd_desc.c ****   return USBD_StrDesc;
 377              		.loc 1 273 3 is_stmt 1 view .LVU78
 378 0004 034C     		ldr	r4, .L27
 379 0006 2100     		movs	r1, r4
 380              	.LVL30:
 273:Src/usbd_desc.c ****   return USBD_StrDesc;
 381              		.loc 1 273 3 is_stmt 0 view .LVU79
 382 0008 0348     		ldr	r0, .L27+4
 383              	.LVL31:
 273:Src/usbd_desc.c ****   return USBD_StrDesc;
 384              		.loc 1 273 3 view .LVU80
 385 000a FFF7FEFF 		bl	USBD_GetString
 386              	.LVL32:
 274:Src/usbd_desc.c **** }
 387              		.loc 1 274 3 is_stmt 1 view .LVU81
 275:Src/usbd_desc.c **** 
 388              		.loc 1 275 1 is_stmt 0 view .LVU82
 389 000e 2000     		movs	r0, r4
 390              		@ sp needed
 391 0010 10BD     		pop	{r4, pc}
 392              	.L28:
 393 0012 C046     		.align	2
 394              	.L27:
 395 0014 00000000 		.word	USBD_StrDesc
 396 0018 00000000 		.word	.LC10
 397              		.cfi_endproc
 398              	.LFE40:
 400              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 401              		.align	2
 402              	.LC13:
 403 0000 48494420 		.ascii	"HID Config\000"
 403      436F6E66 
 403      696700
 404              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 405              		.align	1
 406              		.global	USBD_FS_ConfigStrDescriptor
 407              		.syntax unified
 408              		.code	16
 409              		.thumb_func
 410              		.fpu softvfp
 412              	USBD_FS_ConfigStrDescriptor:
 413              	.LVL33:
 414              	.LFB42:
 301:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 415              		.loc 1 301 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 301:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 419              		.loc 1 301 1 is_stmt 0 view .LVU84
 420 0000 10B5     		push	{r4, lr}
 421              	.LCFI5:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 425 0002 0A00     		movs	r2, r1
ARM GAS  /tmp/ccAubM7r.s 			page 16


 302:Src/usbd_desc.c ****   {
 426              		.loc 1 302 3 is_stmt 1 view .LVU85
 302:Src/usbd_desc.c ****   {
 427              		.loc 1 302 5 is_stmt 0 view .LVU86
 428 0004 0028     		cmp	r0, #0
 429 0006 05D1     		bne	.L30
 304:Src/usbd_desc.c ****   }
 430              		.loc 1 304 5 is_stmt 1 view .LVU87
 431 0008 0549     		ldr	r1, .L32
 432              	.LVL34:
 304:Src/usbd_desc.c ****   }
 433              		.loc 1 304 5 is_stmt 0 view .LVU88
 434 000a 0648     		ldr	r0, .L32+4
 435              	.LVL35:
 304:Src/usbd_desc.c ****   }
 436              		.loc 1 304 5 view .LVU89
 437 000c FFF7FEFF 		bl	USBD_GetString
 438              	.LVL36:
 439              	.L31:
 310:Src/usbd_desc.c **** }
 440              		.loc 1 310 3 is_stmt 1 view .LVU90
 311:Src/usbd_desc.c **** 
 441              		.loc 1 311 1 is_stmt 0 view .LVU91
 442 0010 0348     		ldr	r0, .L32
 443              		@ sp needed
 444 0012 10BD     		pop	{r4, pc}
 445              	.LVL37:
 446              	.L30:
 308:Src/usbd_desc.c ****   }
 447              		.loc 1 308 5 is_stmt 1 view .LVU92
 448 0014 0249     		ldr	r1, .L32
 449              	.LVL38:
 308:Src/usbd_desc.c ****   }
 450              		.loc 1 308 5 is_stmt 0 view .LVU93
 451 0016 0348     		ldr	r0, .L32+4
 452              	.LVL39:
 308:Src/usbd_desc.c ****   }
 453              		.loc 1 308 5 view .LVU94
 454 0018 FFF7FEFF 		bl	USBD_GetString
 455              	.LVL40:
 308:Src/usbd_desc.c ****   }
 456              		.loc 1 308 5 view .LVU95
 457 001c F8E7     		b	.L31
 458              	.L33:
 459 001e C046     		.align	2
 460              	.L32:
 461 0020 00000000 		.word	USBD_StrDesc
 462 0024 00000000 		.word	.LC13
 463              		.cfi_endproc
 464              	.LFE42:
 466              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 467              		.align	2
 468              	.LC16:
 469 0000 48494420 		.ascii	"HID Interface\000"
 469      496E7465 
 469      72666163 
 469      6500
ARM GAS  /tmp/ccAubM7r.s 			page 17


 470              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 471              		.align	1
 472              		.global	USBD_FS_InterfaceStrDescriptor
 473              		.syntax unified
 474              		.code	16
 475              		.thumb_func
 476              		.fpu softvfp
 478              	USBD_FS_InterfaceStrDescriptor:
 479              	.LVL41:
 480              	.LFB43:
 320:Src/usbd_desc.c ****   if(speed == 0)
 481              		.loc 1 320 1 is_stmt 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 320:Src/usbd_desc.c ****   if(speed == 0)
 485              		.loc 1 320 1 is_stmt 0 view .LVU97
 486 0000 10B5     		push	{r4, lr}
 487              	.LCFI6:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 491 0002 0A00     		movs	r2, r1
 321:Src/usbd_desc.c ****   {
 492              		.loc 1 321 3 is_stmt 1 view .LVU98
 321:Src/usbd_desc.c ****   {
 493              		.loc 1 321 5 is_stmt 0 view .LVU99
 494 0004 0028     		cmp	r0, #0
 495 0006 05D1     		bne	.L35
 323:Src/usbd_desc.c ****   }
 496              		.loc 1 323 5 is_stmt 1 view .LVU100
 497 0008 0549     		ldr	r1, .L37
 498              	.LVL42:
 323:Src/usbd_desc.c ****   }
 499              		.loc 1 323 5 is_stmt 0 view .LVU101
 500 000a 0648     		ldr	r0, .L37+4
 501              	.LVL43:
 323:Src/usbd_desc.c ****   }
 502              		.loc 1 323 5 view .LVU102
 503 000c FFF7FEFF 		bl	USBD_GetString
 504              	.LVL44:
 505              	.L36:
 329:Src/usbd_desc.c **** }
 506              		.loc 1 329 3 is_stmt 1 view .LVU103
 330:Src/usbd_desc.c **** 
 507              		.loc 1 330 1 is_stmt 0 view .LVU104
 508 0010 0348     		ldr	r0, .L37
 509              		@ sp needed
 510 0012 10BD     		pop	{r4, pc}
 511              	.LVL45:
 512              	.L35:
 327:Src/usbd_desc.c ****   }
 513              		.loc 1 327 5 is_stmt 1 view .LVU105
 514 0014 0249     		ldr	r1, .L37
 515              	.LVL46:
 327:Src/usbd_desc.c ****   }
 516              		.loc 1 327 5 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccAubM7r.s 			page 18


 517 0016 0348     		ldr	r0, .L37+4
 518              	.LVL47:
 327:Src/usbd_desc.c ****   }
 519              		.loc 1 327 5 view .LVU107
 520 0018 FFF7FEFF 		bl	USBD_GetString
 521              	.LVL48:
 327:Src/usbd_desc.c ****   }
 522              		.loc 1 327 5 view .LVU108
 523 001c F8E7     		b	.L36
 524              	.L38:
 525 001e C046     		.align	2
 526              	.L37:
 527 0020 00000000 		.word	USBD_StrDesc
 528 0024 00000000 		.word	.LC16
 529              		.cfi_endproc
 530              	.LFE43:
 532              		.global	USBD_StringSerial
 533              		.comm	USBD_StrDesc,512,4
 534              		.global	USBD_LangIDDesc
 535              		.global	USBD_FS_DeviceDesc
 536              		.global	FS_Desc
 537              		.section	.data.FS_Desc,"aw"
 538              		.align	2
 541              	FS_Desc:
 542 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 543 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 544 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 545 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 546 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 547 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 548 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 549              		.section	.data.USBD_FS_DeviceDesc,"aw"
 550              		.align	2
 551              		.set	.LANCHOR0,. + 0
 554              	USBD_FS_DeviceDesc:
 555 0000 12010002 		.ascii	"\022\001\000\002\000\000\000@\203\004+W\000\002\001"
 555      00000040 
 555      83042B57 
 555      000201
 556 000f 020301   		.ascii	"\002\003\001"
 557              		.section	.data.USBD_LangIDDesc,"aw"
 558              		.align	2
 559              		.set	.LANCHOR1,. + 0
 562              	USBD_LangIDDesc:
 563 0000 04030904 		.ascii	"\004\003\011\004"
 564              		.section	.data.USBD_StringSerial,"aw"
 565              		.align	2
 566              		.set	.LANCHOR2,. + 0
 569              	USBD_StringSerial:
 570 0000 1A0300   		.ascii	"\032\003\000"
 571 0003 00000000 		.space	23
 571      00000000 
 571      00000000 
 571      00000000 
 571      00000000 
 572              		.text
 573              	.Letext0:
ARM GAS  /tmp/ccAubM7r.s 			page 19


 574              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 575              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 576              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 577              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
 578              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 579              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 580              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 581              		.file 9 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 582              		.file 10 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 583              		.file 11 "Inc/usbd_desc.h"
 584              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccAubM7r.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccAubM7r.s:16     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:24     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccAubM7r.s:47     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/ccAubM7r.s:52     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:59     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccAubM7r.s:81     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/ccAubM7r.s:86     .text.IntToUnicode:0000000000000000 $t
     /tmp/ccAubM7r.s:92     .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccAubM7r.s:168    .text.Get_SerialNum:0000000000000000 $t
     /tmp/ccAubM7r.s:174    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/ccAubM7r.s:238    .text.Get_SerialNum:0000000000000030 $d
     /tmp/ccAubM7r.s:246    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:253    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccAubM7r.s:281    .text.USBD_FS_SerialStrDescriptor:0000000000000010 $d
     /tmp/ccAubM7r.s:286    .rodata.USBD_FS_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccAubM7r.s:290    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:297    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccAubM7r.s:346    .text.USBD_FS_ProductStrDescriptor:0000000000000020 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccAubM7r.s:352    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccAubM7r.s:356    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:363    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccAubM7r.s:395    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
     /tmp/ccAubM7r.s:401    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccAubM7r.s:405    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:412    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccAubM7r.s:461    .text.USBD_FS_ConfigStrDescriptor:0000000000000020 $d
     /tmp/ccAubM7r.s:467    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccAubM7r.s:471    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccAubM7r.s:478    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccAubM7r.s:527    .text.USBD_FS_InterfaceStrDescriptor:0000000000000020 $d
     /tmp/ccAubM7r.s:569    .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccAubM7r.s:562    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccAubM7r.s:554    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccAubM7r.s:541    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccAubM7r.s:538    .data.FS_Desc:0000000000000000 $d
     /tmp/ccAubM7r.s:550    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccAubM7r.s:558    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/ccAubM7r.s:565    .data.USBD_StringSerial:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_GetString
